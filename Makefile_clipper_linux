#
# Sigma-com Zenica 2002-2006
#
# authors:
#  - ernad.husremovic@sigma-com.net
#

OS_NAME=$(shell uname)

BUILD_ENV_LINUX=1

LIBSUFFIX=,,

LIBEXT=.lib


SC_BUILD_ROOT_DOS=c:\\dev
CLIPPERCOMP=$(SC_BUILD_HOME_DIR)/sclib/clipper.rb
CLIPPERFLAGS0=/n /q /DC52 /D$(VERZIJA) /DDBUILD='00' /usc_cdx.ch
CLIPPERROOT=$(SC_BUILD_HOME_DIR)/clp_bc/clipper
CLIPPERROOT_DOS=c:\\dev\clp_bc\\clipper
EXEDEST=$(SC_BUILD_HOME_DIR)/sigma
EXEDOSDEST=c:\\dev\\sc\\exe
LINKEREXE=$(SC_BUILD_HOME_DIR)/sclib/blink_linux.sh
LIBEXE=$(SC_BUILD_HOME_DIR)/sclib/lib_linux.sh

#asembler
ASMCOMP=$(SC_BUILD_HOME_DIR)/sclib/asm52_linux.sh
ASMFLAGS=

#c kompajler
CCOMP=$(SC_BUILD_HOME_DIR)/sclib/c52_linux.sh 
CFLAGS=/n /w /c /AL /FPa /Gs /Zl

ROBODOC=robodoc

ifndef DEBUG
 DEBUG=0
endif  

ifndef VERZIJA
 VERZIJA=CDX
endif
	
ifeq "$(DEBUG)" "1"
 CLIPPERFLAGS=/b /DPROBA $(CLIPPERFLAGS0)
 DEBUGLINK=file $(CLIPPERROOT_DOS)\\lib\\CLD.LIB
 DEBUGDIR=/debug
 DEBUGDIR2=DEBUG\\
else
 CLIPPERFLAGS=$(CLIPPERFLAGS0)
 DEBUGLINK=
 DEBUGDIR=
 DEBUGDIR2=
endif

ifeq "$(DEBUG)" "1"
 LIB_DEST=$(CLIPPERROOT)/debug/$(VERZIJA)/
 LIB_DOS_DEST=$(CLIPPERROOT_DOS)\\debug\\$(VERZIJA)\\

else
 LIB_DEST=$(CLIPPERROOT)/$(VERZIJA)/
 LIB_DOS_DEST=$(CLIPPERROOT_DOS)\\$(VERZIJA)\\
endif


ifeq "${PP}" "1"
 CLIPPERFLAGS += /p
endif

ifeq "${LIB}" "1"
 CLIPPERFLAGS += /DLIB
endif

OBJPRGS=$(PRGS:.prg=.obj)
OBJCS=$(CS:.c=.obj)
OBJASMS=$(ASMS:.asm=.obj)

LIBCMD=$(addprefix +, $(OBJPRGS) $(OBJASMS) $(OBJCS) )

PREFPLUS=fi
LINKCMD=$(addprefix $(PREFPLUS) , $(OBJPRGS) $(OBJASMS) $(OBJCS) )

#napravi dokumente

DOCS=$(PRGS:.prg=.html)
XREFS=$(DOCS:.html=.xref)


.SUFFIXES: .asm .obj
.SUFFIXES: .c .obj	
.SUFFIXES: .prg .obj

# copy st_cdx.ch
#$(SC_BUILD_HOME_DIR)/clp_bc/clipper/include/sc_%.ch:  $(SC_BUILD_ROOT_DOS)/sclib/%/std.ch
#	cp -v $(SC_BUILD_ROOT_DOS)/sclib/cdx/std.ch $(SC_BUILD_HOME_DIR)/clp_bc/clipper/include/sc_cdx.ch

%.obj : %.prg $(SC_BUILD_HOME_DIR)/clp_bc/clipper/include/sc_cdx.ch 
	$(CLIPPERCOMP) --switches '$(CLIPPERFLAGS)' --compile $< 

.asm.obj:
	$(CLIPPERCOMP) --switches '$(ASMFLAGS)' --asm-compile $< 

.c.obj:
	$(CLIPPERCOMP) --switches '$(CFLAGS)' --c-compile $< 
	$(CCOMP) $(CFLAGS) $<


